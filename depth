#!/usr/bin/env python
import freenect
import matplotlib.pyplot as mp
import numpy
import frame_convert
import signal
from multiprocessing import Process, Value
import time

keep_running = True


def get_depth():
    depth = frame_convert.pretty_depth(freenect.sync_get_depth()[0])
    #min = depth.argmin()
    #where = numpy.where(depth == min, True, False)
    #count = numpy.count_nonzero(where == True)
    #print min, count
    min = depth.argmin()
    minloc = numpy.unravel_index(min, depth.shape)
    y = float(minloc[0])/float(depth.shape[0])
    x = float(minloc[1])/float(depth.shape[1])
    return depth, x, y, min


def handler(signum, frame):
    """Sets up the kill handler, catches SIGINT"""
    global keep_running
    keep_running = False


def consumer(sh_x, sh_y, sh_min):
    while True:
        print sh_x.value, sh_y.value, sh_min.value
        time.sleep(1)


mp.ion()
mp.gray()
mp.figure(1)
image_depth = mp.imshow(get_depth()[0], interpolation='nearest', animated=True)
print('Press Ctrl-C in terminal to stop')
signal.signal(signal.SIGINT, handler)

sh_x = Value('d', 0.0)
sh_y = Value('d', 0.0)
sh_min = Value('d', 0.0)

p = Process(target=consumer, args=(sh_x, sh_y, sh_min))
p.start()

while keep_running:
    mp.figure(1)
    depth, x, y, min = get_depth()
    image_depth.set_data(depth)
    sh_x.value = x
    sh_y.value = y
    sh_min.value = min
    mp.draw()
    mp.waitforbuttonpress(0.01)
